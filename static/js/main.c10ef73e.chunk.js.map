{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","App.jsx","index.js"],"names":["SearchBar","onSubmit","useState","searchRequest","setSearchRequest","className","e","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","webformatURL","largeImageURL","getLargeImage","tag","src","alt","onClick","target","getAttribute","ImageGallery","pictures","map","picture","tags","uuidv4","Modal","onClose","largeImage","window","addEventListener","code","event","Button","App","showModal","setShowModal","setLargeImage","setPictures","setError","page","setPage","isLoading","setIsLoading","useEffect","a","axios","get","response","data","hits","loadPictures","toggleModal","autoClose","color","height","width","timeout","length","style","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c10ef73e.chunk.js","sourcesContent":["import './SearchBar.css';\nimport {useState} from 'react';\nimport { toast } from 'react-toastify';\n\nfunction SearchBar ({onSubmit}) {\n    \n  const[searchRequest, setSearchRequest] = useState('');\n\n  const handleRequestChange = e => {\n\n      setSearchRequest(e.currentTarget.value.toLowerCase())       \n  }\n    \n   const handleRequestSubmit = e => {\n        e.preventDefault();\n\n        if (searchRequest.trim() === '') {\n        toast.error('Введите запрос.');\n        return;\n    }\n\n    onSubmit(searchRequest);\n    setSearchRequest('');\n    }\n\n    \n    return (\n<header className=\"Searchbar\">\n  <form className=\"SearchForm\" onSubmit={handleRequestSubmit}>\n    <button type=\"submit\" className=\"SearchForm-button\">\n      <span className=\"SearchForm-button-label\">Search</span>\n    </button>\n\n    <input\n      className=\"SearchForm-input\"\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search images and photos\"\n      value={searchRequest}\n      onChange={handleRequestChange}\n    />\n  </form>\n</header>\n    )\n        \n}\n\nexport default SearchBar;","import React from 'react';\nimport './ImageGalleryItem.css';\n\n\nfunction ImageGalleryItem({ webformatURL, largeImageURL, getLargeImage, tag }) {\n    \n    const handleClick = e => {\n       getLargeImage(e.target.getAttribute([\"data-source\"]))\n   }\n\n    return (\n        < li className=\"ImageGalleryItem\" >\n            <img src={webformatURL} data-source={largeImageURL} alt={tag} className=\"ImageGalleryItem-image\" onClick={handleClick}  />\n        </li >\n    )      \n}\n\nexport default ImageGalleryItem;\n\n","import './ImageGallery.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\n\n\nfunction ImageGallery({ pictures, getLargeImage }) {\n    \n    \n    return (\n        <ul className=\"ImageGallery\">\n            {pictures.map((picture) => <ImageGalleryItem key={uuidv4()}\n            webformatURL={picture.webformatURL} largeImageURL={picture.largeImageURL} tag={picture.tags} getLargeImage={getLargeImage}\n            />)}\n        </ul>\n    )    \n}\n\nexport default ImageGallery;\n\n","import './Modal.css';\n\n\nfunction Modal ({onClose, largeImage}) {\n\n    const handleKeyDown = e => {\n        if (e.code === 'Escape') {\n            onClose();\n        }\n    }\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    const handleBackdropClick = event => {\n        if (event.currentTarget === event.target) {\n            onClose();\n        }\n    };    \n\n        return (\n            <div className=\"Overlay\" onClick={handleBackdropClick}>\n                <div className=\"Modal\">\n                    <img src={largeImage} alt=\"123\" />\n                </div>\n            </div>\n\n        )\n    \n}\n\nexport default Modal;\n","import React from 'react';\nimport './Button.css';\n\nfunction Button({ onClick }) {\n    return (\n        <button type=\"button\" className=\"Button\" onClick={onClick}>Load More</button>\n    )\n}\n\nexport default Button;","import {useState, useEffect} from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport Button from './components/Button/Button';\n\nconst API_KEY = '18976162-4407e31cd80a0810b100a4c9f';\n\nfunction App () {\n  \n  const [searchRequest, setSearchRequest] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [largeImage, setLargeImage] = useState('');\n  const [pictures, setPictures] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n        if (searchRequest === '') {\n            return\n        }\n        \n        const loadPictures = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(\n        `https://pixabay.com/api/?q=${searchRequest}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n      );\n       \n      setPictures((pictures) => [...pictures, ...response.data.hits]);\n      setError('');\n    } catch (error) {\n      setError('Error while loading data. Try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n    };\n        loadPictures();\n      \n  }, [page, searchRequest]);\n  \n   useEffect(() => {\n        setPage(1);\n        setPictures('');\n    }, [searchRequest]);\n\n\n  const toggleModal = () => {\n    setShowModal(!showModal);        \n  }\n\n  const handleClick = data => {\n    setLargeImage(data);\n    toggleModal();\n  }  \n\n    \n    return (\n      <div className=\"App\">\n        <ToastContainer autoClose={3000} />\n        <SearchBar onSubmit={setSearchRequest} />\n        {isLoading && <Loader type=\"Puff\"\n                    color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n                    timeout={3000} />}\n        {error && <h2>{error}</h2>}\n        {pictures.length === 0 && searchRequest.length > 0 && <h2 style={{textAlign: \"center\"}}>No results were found for your search</h2>}\n        {pictures.length > 0 && <ImageGallery pictures={pictures} getLargeImage={handleClick} />}\n        {pictures.length > 1 && <Button onClick={() => setPage(page => page + 1)} />} \n        {showModal && <Modal largeImage={largeImage} onClose={toggleModal} />}\n\n      </div>\n    )\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}